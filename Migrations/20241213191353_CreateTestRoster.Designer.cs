// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonDraft.Data;

#nullable disable

namespace PokemonDraft.Migrations
{
    [DbContext(typeof(PokemonDraftContext))]
    [Migration("20241213191353_CreateTestRoster")]
    partial class CreateTestRoster
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonDraft.Models.Entities.PokemonStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Deaths")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deaths");

                    b.Property<string>("Gp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gp");

                    b.Property<string>("Kos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kos");

                    b.Property<string>("MaxKill")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("max_kill");

                    b.Property<string>("MultiKill")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("multi_kill");

                    b.Property<string>("Pick")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pick");

                    b.Property<string>("PlusMinus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("plus_minus");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("team");

                    b.Property<string>("Tier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier");

                    b.HasKey("Id");

                    b.ToTable("PokemonStats");
                });

            modelBuilder.Entity("PokemonDraft.Models.Entities.Roster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Deaths")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("deaths");

                    b.Property<int>("Gp")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("gp");

                    b.Property<int>("Kos")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("kos");

                    b.Property<int>("Losses")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("losses");

                    b.Property<string>("Mega")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mega");

                    b.Property<int>("OppPlusMinus")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("opp_plus_minus");

                    b.Property<int>("PickNumber")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("pick_number");

                    b.Property<int>("PlusMinus")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("plus_minus");

                    b.Property<string>("TeamName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("team_name");

                    b.Property<string>("TeamOwner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("team_owner");

                    b.Property<string>("TierFiveA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_five_a");

                    b.Property<string>("TierFiveB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_five_b");

                    b.Property<string>("TierFourA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_four_a");

                    b.Property<string>("TierFourB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_four_b");

                    b.Property<string>("TierOneA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_one_a");

                    b.Property<string>("TierOneB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_one_b");

                    b.Property<string>("TierThreeA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_three_a");

                    b.Property<string>("TierThreeB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_three_b");

                    b.Property<string>("TierTwoA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_two_a");

                    b.Property<string>("TierTwoB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tier_two_b");

                    b.Property<string>("TradeA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_a");

                    b.Property<string>("TradeB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_b");

                    b.Property<string>("TradeC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_c");

                    b.Property<string>("TradeD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_d");

                    b.Property<string>("TradeE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_e");

                    b.Property<string>("TradeF")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_f");

                    b.Property<string>("TradeG")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_g");

                    b.Property<string>("TradeH")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_h");

                    b.Property<string>("TradeI")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_i");

                    b.Property<string>("TradeJ")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_j");

                    b.Property<int>("Wins")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("wins");

                    b.Property<int>("Wl")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("wl");

                    b.HasKey("Id");

                    b.ToTable("RostersTest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deaths = 0,
                            Gp = 0,
                            Kos = 0,
                            Losses = 0,
                            Mega = "Sableye",
                            OppPlusMinus = 0,
                            PickNumber = 0,
                            PlusMinus = 0,
                            TeamName = "Spiteful Sableyes",
                            TeamOwner = "Pyth",
                            TierFiveA = "Grafaiai",
                            TierFiveB = "Togedemaru",
                            TierFourA = "Salazzle",
                            TierFourB = "Tsareena",
                            TierOneA = "Tornadus-T",
                            TierOneB = "Clefable",
                            TierThreeA = "Slowking",
                            TierThreeB = "Tangrowth",
                            TierTwoA = "Zygarde-50%",
                            TierTwoB = "Metagross",
                            TradeA = "Quagsire",
                            Wins = 0,
                            Wl = 0
                        },
                        new
                        {
                            Id = 2,
                            Deaths = 0,
                            Gp = 0,
                            Kos = 0,
                            Losses = 0,
                            Mega = "Charizard-Y",
                            OppPlusMinus = 0,
                            PickNumber = 0,
                            PlusMinus = 0,
                            TeamName = "North Bay Nickits",
                            TeamOwner = "Inuktitut",
                            TierFiveA = "Rotom-F",
                            TierFiveB = "Leafeon",
                            TierFourA = "Tinkaton",
                            TierFourB = "Gastrodon",
                            TierOneA = "Great Tusk",
                            TierOneB = "Tapu Lele",
                            TierThreeA = "H-Zoroark",
                            TierThreeB = "Crobat",
                            TierTwoA = "Jirachi",
                            TierTwoB = "H-Samurott",
                            TradeA = "Latias",
                            TradeB = "Zeraora",
                            TradeC = "Whimsicott",
                            Wins = 0,
                            Wl = 0
                        });
                });

            modelBuilder.Entity("PokemonDraft.Models.Entities.TradeStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TradeDeaths")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_d");

                    b.Property<string>("TradeGp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_gp");

                    b.Property<string>("TradeKos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_k");

                    b.Property<string>("TradeMaxKill")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_max_kill");

                    b.Property<string>("TradeMultiKill")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_multi_kill");

                    b.Property<string>("TradePick")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_pick");

                    b.Property<string>("TradePlusMinus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_plus_minus");

                    b.Property<string>("TradePreviousTeam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_previous_team");

                    b.Property<string>("TradeTeam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_team");

                    b.Property<string>("TradeTier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trade_tier");

                    b.HasKey("Id");

                    b.ToTable("TradeStats");
                });

            modelBuilder.Entity("PokemonDraft.Models.Entities.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("user_account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "guest1",
                            UserName = "guest"
                        },
                        new
                        {
                            Id = 2,
                            Password = "player1",
                            UserName = "player"
                        },
                        new
                        {
                            Id = 3,
                            Password = "admin1",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("PokemonDraft.Models.Entities.UserAccountPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit")
                        .HasColumnName("is_enabled");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int")
                        .HasColumnName("user_account_id");

                    b.Property<string>("UserPolicy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_policy");

                    b.HasKey("Id");

                    b.ToTable("user_account_policy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsEnabled = false,
                            UserAccountId = 1,
                            UserPolicy = "VIEW_PRODUCT"
                        },
                        new
                        {
                            Id = 2,
                            IsEnabled = false,
                            UserAccountId = 1,
                            UserPolicy = "ADD_PRODUCT"
                        },
                        new
                        {
                            Id = 3,
                            IsEnabled = false,
                            UserAccountId = 1,
                            UserPolicy = "EDIT PRODUCT"
                        },
                        new
                        {
                            Id = 4,
                            IsEnabled = false,
                            UserAccountId = 1,
                            UserPolicy = "DELETE_PRODUCT"
                        },
                        new
                        {
                            Id = 5,
                            IsEnabled = true,
                            UserAccountId = 2,
                            UserPolicy = "VIEW_PRODUCT"
                        },
                        new
                        {
                            Id = 6,
                            IsEnabled = false,
                            UserAccountId = 2,
                            UserPolicy = "ADD_PRODUCT"
                        },
                        new
                        {
                            Id = 7,
                            IsEnabled = false,
                            UserAccountId = 2,
                            UserPolicy = "EDIT PRODUCT"
                        },
                        new
                        {
                            Id = 8,
                            IsEnabled = false,
                            UserAccountId = 2,
                            UserPolicy = "DELETE_PRODUCT"
                        },
                        new
                        {
                            Id = 9,
                            IsEnabled = true,
                            UserAccountId = 3,
                            UserPolicy = "VIEW_PRODUCT"
                        },
                        new
                        {
                            Id = 10,
                            IsEnabled = true,
                            UserAccountId = 3,
                            UserPolicy = "ADD_PRODUCT"
                        },
                        new
                        {
                            Id = 11,
                            IsEnabled = true,
                            UserAccountId = 3,
                            UserPolicy = "EDIT PRODUCT"
                        },
                        new
                        {
                            Id = 12,
                            IsEnabled = true,
                            UserAccountId = 3,
                            UserPolicy = "DELETE_PRODUCT"
                        });
                });

            modelBuilder.Entity("PokemonDraft.Models.Pokedex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbilityA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbilityC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Atk")
                        .HasColumnType("int");

                    b.Property<int>("Bst")
                        .HasColumnType("int");

                    b.Property<int>("Def")
                        .HasColumnType("int");

                    b.Property<int>("DexNum")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spa")
                        .HasColumnType("int");

                    b.Property<int>("Spd")
                        .HasColumnType("int");

                    b.Property<int>("Spe")
                        .HasColumnType("int");

                    b.Property<string>("Tier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trainer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokedex");
                });
#pragma warning restore 612, 618
        }
    }
}
